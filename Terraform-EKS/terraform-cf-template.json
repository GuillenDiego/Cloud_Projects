{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Deploying a VM in AWS Using the Terraform Workflow",
  "Parameters": {
    "LatestAmiId": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
    },
    "Username": {
      "Type": "String",
      "Default": "cloud_user",
      "Description": "The username for the EC2 instance"
    }
  },
  "Resources": {
    "IGW": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "Terraform-Amati-IGW"
          }
        ]
      }
    },
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true,
        "CidrBlock": "10.0.0.0/16",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Purpose",
            "Value": "Terraform-Amati-VPC"
          }
        ]
      }
    },
    "IGWAttach": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "IGW"
        }
      }
    },
    "RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "InternetRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "IGW"
        },
        "RouteTableId": {
          "Ref": "RouteTable"
        }
      }
    },
    "SubnetRouteAssociationA": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "RouteTable"
        },
        "SubnetId": {
          "Ref": "SubnetA"
        }
      }
    },
    "SG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "SG for Terraform Amati",
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "Terraform-Amati-SG"
          }
        ]
      }
    },
    "SubnetA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "CidrBlock": "10.0.1.0/24",
        "Tags": [
          {
            "Key": "Name",
            "Value": "SubnetA"
          }
        ],
        "MapPublicIpOnLaunch": true
      }
    },
    "EC2SecurityIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "FromPort": 22,
        "GroupId": {
          "Fn::GetAtt": [
            "SG",
            "GroupId"
          ]
        },
        "ToPort": 22,
        "CidrIp": "0.0.0.0/0",
        "IpProtocol": "tcp"
      }
    },
    "TerraformRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/",
        "RoleName": "TerraformRole",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": "sts:AssumeRole",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "CustomPolicyAmati",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "Stmt1591121535953",
                  "Action": [
                    "ec2:*"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "AccessKey": {
      "Type": "AWS::IAM::AccessKey",
      "Properties": {
        "UserName": {"Ref": "Username"}
      }
    },
    "EC2InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "TerraformRole"
          }
        ]
      }
    },
    "TerraformController": {
      "Type": "AWS::EC2::Instance",
      "CreationPolicy": {
        "ResourceSignal": {
          "Count": "1",
          "Timeout": "PT12M"
        }
      },
      "Properties": {
        "ImageId": "ami-046fc64ce51e6ccab",
        "InstanceType": "t3.micro",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TerraformController"
          }
        ],
        "SecurityGroupIds": [
          {
            "Ref": "SG"
          }
        ],
        "IamInstanceProfile": {
          "Ref": "EC2InstanceProfile"
        },
        "SubnetId": {
          "Ref": "SubnetA"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "yum -y install git wget jq unzip gcc yum-utils\n",
                "yum-config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo\n",
                "yum -y install terraform\n",
                "echo '@MA@7!Eek5' | sudo passwd --stdin ", {"Ref": "Username"}, "\n",
                "sudo service sshd restart\n",
                "sudo -iu ", {"Ref": "Username"}, " aws configure set default.region ", 
                {
                  "Ref": "AWS::Region"
                }, 
                "\n",
                "curl -o kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl\n",
                "chmod +x kubectl\n",
                "mv kubectl /usr/bin/kubectl\n",
                "yum -y remove aws-cli\n",
                "curl https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip && unzip awscliv2.zip && sudo ./aws/install\n",
                "rm -rf awscliv2.zip\n",
                "chown -R ", {"Ref": "Username"}, ":", {"Ref": "Username"}, " /home/", {"Ref": "Username"}, "/amati_code\n",
                "su - ", {"Ref": "Username"}, " -c 'cd /home/", {"Ref": "Username"}, "/'\n",
                "su - ", {"Ref": "Username"}, " -c 'wget https://raw.githubusercontent.com/ACloudGuru-Resources/content-terraform-2021/main/lab-terraform-eks-2.zip'\n",
                "su - ", {"Ref": "Username"}, " -c 'unzip lab-terraform-eks-2.zip'\n",
                "echo 'ami: '",
                {
                  "Ref": "LatestAmiId"
                },
                ">> /home/", {"Ref": "Username"}, "/resource_ids.txt\n",
                "echo 'subnet_id: '",
                {
                  "Ref": "SubnetA"
                },
                ">> /home/", {"Ref": "Username"}, "/resource_ids.txt\n",
                "/opt/aws/bin/cfn-signal --exit-code 0 --resource TerraformController --region ",
                {
                  "Ref": "AWS::Region"
                },
                " ",
                "--stack ",
                {
                  "Ref": "AWS::StackName"
                }
              ]
            ]
          }
        }
      }
    }
  },
  "Outputs": {
    "pubIpAddress": {
      "Description": "Terraform-Controller",
      "Value": {
        "Fn::GetAtt": [
          "TerraformController",
          "PublicIp"
        ]
      }
    },
    "userAccessKey": {
      "Description": "user Access Key",
      "Value": {
        "Ref": "AccessKey"
      }
    },
    "userSecretAccessKey": {
      "Description": "user Secret Access Key",
      "Value": {
        "Fn::GetAtt": [
          "AccessKey",
          "SecretAccessKey"
        ]
      }
    }
  }
}